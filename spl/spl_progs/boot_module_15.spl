//print "boot";

//load module 0
loadi(40,53);
loadi(41,54);

//load module 4
loadi(48,61);
loadi(49,62);

[TERMINAL_STATUS_TABLE]=0; //terminal is free at begining

//load even
loadi(83,70);
loadi(84,71);

loadi(16,29);
loadi(17,30);
loadi(4,17);
loadi(5,18);
loadi(63,13);
loadi(64,14);
//load init
loadi(65,7);
loadi(66,8);

loadi(22,35);
loadi(23,36);
loadi(2,15);
loadi(3,16);

//init
PTBR=PAGE_TABLE_BASE +20; //as PID of init process is 1
PTLR=10;
//LIBRARY
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//HEAP
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//CODE
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
[76*512]=[65*512+1];

//init
[PROCESS_TABLE + 16 + 11]=80;
[PROCESS_TABLE + 16 + 1]=1;
[PROCESS_TABLE + 16 + 4]=CREATED;
[PROCESS_TABLE + 16 + 13]=8*512;
[PROCESS_TABLE + 16 + 12]=0;
[PROCESS_TABLE + 16 + 14]=PTBR;
[PROCESS_TABLE + 16 + 15]=PTLR;

//even
PTBR=PAGE_TABLE_BASE +40; //as PID of even process is 2
PTLR=10;
//LIBRARY
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//HEAP
[PTBR+4]=85;
[PTBR+5]="0110";
[PTBR+6]=86;
[PTBR+7]="0110";

//CODE
[PTBR+8]=83;
[PTBR+9]="0100";
[PTBR+10]=84;
[PTBR+11]="0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 87;
[PTBR+17] = "0110";
[PTBR+18] = 88;
[PTBR+19] = "0110";
[87*512]=[83*512+1];

//even
[PROCESS_TABLE + 32 + 11]=89;
[PROCESS_TABLE + 32 + 1]=2;
[PROCESS_TABLE + 32 + 4]=CREATED;
[PROCESS_TABLE + 32 + 13]=8*512;
[PROCESS_TABLE + 32 + 12]=0;
[PROCESS_TABLE + 32 + 14]=PTBR;
[PROCESS_TABLE + 32 + 15]=PTLR;
//print "exiting boot";

[PROCESS_TABLE + 16*3 + 4]=TERMINATED;
[PROCESS_TABLE + 16*4 + 4]=TERMINATED;
[PROCESS_TABLE + 16*5 + 4]=TERMINATED;
[PROCESS_TABLE + 16*6 + 4]=TERMINATED;
[PROCESS_TABLE + 16*7 + 4]=TERMINATED;
[PROCESS_TABLE + 16*8 + 4]=TERMINATED;
[PROCESS_TABLE + 16*9 + 4]=TERMINATED;
[PROCESS_TABLE + 16*10 + 4]=TERMINATED;
[PROCESS_TABLE + 16*11 + 4]=TERMINATED;
[PROCESS_TABLE + 16*12 + 4]=TERMINATED;
[PROCESS_TABLE + 16*13 + 4]=TERMINATED;
[PROCESS_TABLE + 16*14 + 4]=TERMINATED;
[PROCESS_TABLE + 16*15 + 4]=TERMINATED;
//print "boot over";
return;
