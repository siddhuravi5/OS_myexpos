alias usersp R1;
usersp=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias syscallno R2;
syscallno=[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((usersp-5)/512)]*512+(usersp-5)%512];

//semLock
if(syscallno==19) then
	alias semid R2;
	semid=[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((usersp-4)/512)]*512+(usersp-4)%512];
	
	//print semid;
	//busy loop
	while([SEMAPHORE_TABLE+semid*4]!=-1 && [SEMAPHORE_TABLE+semid*4]!=[SYSTEM_STATUS_TABLE+1] ) do
		multipush(R1,R2);
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_SEMAPHORE;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=semid;
		//print "busy loop";
		//print [SEMAPHORE_TABLE+semid];
		//print [SYSTEM_STATUS_TABLE+1];
		call MOD_5;
		multipop(R1,R2);
	endwhile;
	//print "lock";
	[SEMAPHORE_TABLE+semid*4]=[SYSTEM_STATUS_TABLE+1];
	[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((usersp-1)/512)]*512+(usersp-1)%512]=0;
endif;

//semUnLock
if(syscallno==20) then
	alias semid R2;
	semid=[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((usersp-4)/512)]*512+(usersp-4)%512];

	[SEMAPHORE_TABLE+semid*4]=-1;
	alias i R3;
	i=0;
	while(i<16) do
		if([PROCESS_TABLE+i*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+i*16+5]==semid) then
			[PROCESS_TABLE+i*16+4]=READY;
			[PROCESS_TABLE+i*16+5]=-1;
		endif;
		i=i+1;
	endwhile;
endif;

SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
